<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zanezz.demo.dao.UserMapper">
    <resultMap id="BaseResultMap" type="cn.zanezz.demo.entity.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="enabled" jdbcType="BIT" property="enabled"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="userface" jdbcType="VARCHAR" property="userface"/>
        <result column="regTime" jdbcType="TIMESTAMP" property="regtime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, username, nickname, password, enabled, email, userface, regTime
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="cn.zanezz.demo.entity.User">
    insert into user (id, username, nickname, 
      password, enabled, email, 
      userface, regTime)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{enabled,jdbcType=BIT}, #{email,jdbcType=VARCHAR}, 
      #{userface,jdbcType=VARCHAR}, #{regtime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="cn.zanezz.demo.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="userface != null">
                userface,
            </if>
            <if test="regtime != null">
                regTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=BIT},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="userface != null">
                #{userface,jdbcType=VARCHAR},
            </if>
            <if test="regtime != null">
                #{regtime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.zanezz.demo.entity.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=BIT},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="userface != null">
                userface = #{userface,jdbcType=VARCHAR},
            </if>
            <if test="regtime != null">
                regTime = #{regtime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.zanezz.demo.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=BIT},
      email = #{email,jdbcType=VARCHAR},
      userface = #{userface,jdbcType=VARCHAR},
      regTime = #{regtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="getUser" parameterType="java.lang.String" resultType="cn.zanezz.demo.entity.User">
        select * from user where username=#{username} AND `password` = #{password}
    </select>

    <select id="getUserByName" parameterType="java.lang.String" resultType="cn.zanezz.demo.entity.User">
        select * from user where username=#{username}
    </select>
</mapper>